#!/usr/bin/env python2

from __future__ import print_function


class OdooCtl(object):

    def __init__(self,
            server='http://127.0.0.1:8069',
            database='odoo',
            user='admin',
            password='admin'):
        self.server = server
        self.database = database
        self.user = user
        self.password = password
        self.client = None


    def connect(self):
        import erppeek

        self.client = erppeek.Client(
            self.server,
            db=self.database,
            user=self.user,
            password=self.password
        )


    def get_installed_modules(self):
        proxy = self.client.model('ir.module.module')

        for x in proxy.browse([('state', '=', 'installed')]):
            print(x.name)


def main(args=None):
    '''
    Usage: prog <profile> [timeout]
    '''
    import etcd
    import sys
    import socket

    if args == None:
        args = sys.argv

    profile = args[1]

    # Get the profile's port from etcd
    client = etcd.Client()
    port = int(client.get('/odoo/profiles/{0}/port'.format(profile)).value)

    # Default timeout is 30 seconds.
    timeout = 30
    if len(args) > 2:
        timeout = int(args[2])

    # Warning, this is a global timeout for all connections.
    socket.setdefaulttimeout(timeout)

    # Set up proper parameters for proper xmlrpc connection.
    odooctl = OdooCtl(
        server = 'http://127.0.0.1:{0}'.format(port),
        database = None,
        user = None,
        password = None,
    )

    try:
        odooctl.connect()
    except:
        from subprocess import call
        # Upon connection failure, restart the profile
        call(['systemctl', 'restart', 'odoo@{0}'.format(profile)])


def run_main(args=None):
    try:
        main(args)
    except KeyboardInterrupt:
        print()


if __name__ == '__main__':
    from sys import exit
    exit(run_main())
